class SetADT:
    def __init__(self):
        self.elements = []

    def add(self, element):
        if element not in self.elements:
            self.elements.append(element)

    def remove(self, element):
        if element in self.elements:
            self.elements.remove(element)

    def contains(self, element):
        return element in self.elements

    def size(self):
        return len(self.elements)

    def iterator(self):
        return iter(self.elements)

    def intersection(self, other_set):
        intersection_set = SetADT()
        for element in self.elements:
            if other_set.contains(element):
                intersection_set.add(element)
        return intersection_set

    def union(self, other_set):
        union_set = SetADT()
        for element in self.elements:
            union_set.add(element)
        for element in other_set.elements:
            union_set.add(element)
        return union_set

    def difference(self, other_set):
        difference_set = SetADT()
        for element in self.elements:
            if not other_set.contains(element):
                difference_set.add(element)
        return difference_set

    def subset(self, other_set):
        return all(element in other_set.elements for element in self.elements)

aa=int(input("Enter the no. of elements in 1st set: "))
set1 = SetADT()
for _ in range(int(aa)):
    c1 = int(input("Enter an element for Set 1: "))
    set1.add(c1)


bb=int(input("Enter the no. of elements in 2nd set: "))
set2 = SetADT()
for _ in range(int(bb)):
    d1 = int(input("Enter an element for Set 2: "))
    set2.add(d1)


print("Set 1:", list(set1.iterator()))
print("Set 2:", list(set2.iterator()))

print("Intersection:", list(set1.intersection(set2).iterator()))
print("Union:", list(set1.union(set2).iterator()))
print("Difference (Set1 - Set2):", list(set1.difference(set2).iterator()))
print("Difference (Set2 - Set1):", list(set2.difference(set1).iterator()))
print("Is Set1 a subset of Set2?", set1.subset(set2))