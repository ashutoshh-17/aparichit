#include<iostream>
using namespace std;

class complex{
    public:
    float real,img;

    complex(){}

    complex operator+(const complex& obj){
        complex temp;
        temp.real= real + obj.real;
        temp.img= img + obj.img;
        return temp;
    }
    complex operator*(const complex& obj){
        complex temp;
        temp.real=real*obj.real-img*obj.img;
        temp.img=real*obj.real+img*obj.img;
        return temp;
    }

    friend ostream& operator <<(ostream&, const complex&);
    friend istream& operator>>(istream&, complex&);
};

ostream& operator <<(ostream& outt, const complex& obj){
    outt<<obj.real;
    outt<<"+"<<obj.img<<"i";
    return outt;
}

istream& operator>>(istream& is, complex& obj){
    is>>obj.real;
    is>>obj.img;
    return is;
}


int main() {
    complex a, b, c, d;

    cout << "Enter The First Complex Number" << endl;
    cout << "Enter The Real And Imaginary Part Of The Complex Number: " << endl;
    cin >> a;

    cout << "Enter The Second Complex Number" << endl;
    cout << "Enter The Real And Imaginary Part Of The Complex Number: " << endl;
    cin >> b;

    c = a + b;
    cout << "Addition Is: " << endl;
    cout << c << endl;

    cout << "Multiplication Is: " << endl;
    d = a * b;
    cout << d << endl;

    return 0;
};